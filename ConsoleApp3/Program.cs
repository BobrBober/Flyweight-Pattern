using System;
using System.Collections.Generic;

public class Персонаж
{
    // Легковесные данные
    public string Имя { get; private set; }
    public string Тип { get; private set; }
    public string Изображение { get; private set; }

    // Нелегковесные данные
    public int Уровень { get; set; }
    public int Опыт { get; set; }

    // Приватный конструктор, чтобы объекты создавались только через фабрику
    private Персонаж(string имя, string тип, string изображение)
    {
        Имя = имя;
        Тип = тип;
        Изображение = изображение;
        Уровень = 1;
        Опыт = 0;
    }

    public override string ToString()
    {
        return $"Персонаж(Имя: {Имя}, Тип: {Тип}, Изображение: {Изображение}, Уровень: {Уровень}, Опыт: {Опыт})";
    }

    public class ФабрикаПерсонажей
    {
        // Коллекция для хранения всех созданных объектов
        private static readonly Dictionary<(string Имя, string Тип), Персонаж> _персонажи = new();

        // Метод для получения или создания объекта
        public static Персонаж ПолучитьПерсонажа(string имя, string тип, string изображение)
        {
            var ключ = (Имя: имя, Тип: тип); // Уникальный ключ для проверки повторений

            if (_персонажи.ContainsKey(ключ))
            {
                Console.WriteLine($"Персонаж с именем \"{имя}\" и типом \"{тип}\" уже существует!");
                return _персонажи[ключ]; // Возвращаем существующий объект
            }

            // Если персонаж не существует, создаем нового
            var новыйПерсонаж = new Персонаж(имя, тип, изображение);
            _персонажи[ключ] = новыйПерсонаж;
            Console.WriteLine($"Создан новый персонаж: Имя = {имя}, Тип = {тип}");
            return новыйПерсонаж;
        }
    }
}

class Program
{
    static void Main()
    {
        // Создаем персонажей через фабрику
        var персонаж1 = Персонаж.ФабрикаПерсонажей.ПолучитьПерсонажа("Герой", "Воин", "герой.png");
        var персонаж2 = Персонаж.ФабрикаПерсонажей.ПолучитьПерсонажа("Маг", "Волшебник", "маг.png");
        var персонаж3 = Персонаж.ФабрикаПерсонажей.ПолучитьПерсонажа("Герой", "Воин", "герой.png"); // Повторный запрос

        // Изменяем нелегковесные данные
        персонаж1.Уровень = 5;
        персонаж1.Опыт = 1000;

        // Проверяем вывод
        Console.WriteLine(персонаж1); // Персонаж(Имя: Герой, Тип: Воин, Изображение: герой.png, Уровень: 5, Опыт: 1000)
        Console.WriteLine(персонаж2); // Персонаж(Имя: Маг, Тип: Волшебник, Изображение: маг.png, Уровень: 1, Опыт: 0)
        Console.WriteLine(персонаж3); // Персонаж(Имя: Герой, Тип: Воин, Изображение: герой.png, Уровень: 5, Опыт: 1000)

        // Проверка ссылочной идентичности
        Console.WriteLine(ReferenceEquals(персонаж1, персонаж3)); // True
    }
}
